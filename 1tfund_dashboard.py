# -*- coding: utf-8 -*-
"""1tfund_dashboard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ClOZ47zomm7d4rVjQ2I7LgCCI3FlGNfA
"""
import streamlit as st
import numpy as np
import pandas as pd

# defining app content
def main():
  st.set_page_config(layout="wide")


  st.header('For Banks/Lenders only')
  cola2,cola3 = st.beta_columns(2)
  # with cola1:
    # st.info('Amount of credit risk due to climate risk affected areas')
  with cola2:
    credit_amount = st.number_input('Credit risk amount (USD)',value=1000000,step=1000)
  with cola3:
    climate_risk_banks = st.selectbox('Type of climate risk',['Tropical Cyclone','Drought','Flood','Wildfire','Sea Level Rise'])


  st.header('For Insurers only (Public & Private Sector)')
  colb1,colb2,colb3 = st.beta_columns(3)
  with colb1:
    climate_risk_insurers = st.selectbox('Type of climate risks',['Tropical Cyclone','Drought','Flood','Wildfire','Sea Level Rise'])
  with colb2:
    modelling_loss_insurers = st.number_input('Catastrophe modelling expected loss (USD)', value=0)
  with colb3:
    job_loss_insurers = st.number_input('Avg no of job losses due to natural disasters',value=0)


  st.header('For Hospital/Hotel Owners only')
  colc1,colc2,colc3 = st.beta_columns(3)
  with colc1:
    avg_room_rate_hotel = st.number_input('Average Room Rate (USD)', value=500)
    ann_touri_rev_hotel = st.number_input('Annual Tourism Revenue (Past 3 Years)',value=500)
  with colc2:
    avg_rate_view_hotel = st.number_input('Average Room Rate with View (USD)',value=500)
    ann_touri_arr_hotel = st.number_input('Annual no of Tourist Arrivals (Past 3 Years)', value=500)
  with colc3:
    avr_rate_no_view_hotel = st.number_input('Average Room Rate, No View (USD)',value=500)
    rev_loss_natudis_hotel = st.number_input('Revenue Losses due to Natural Disasters', value=500)


  st.header('For Public Investors')
  cold1,cold2,cold3 = st.beta_columns(3)
  with cold1:
    st.text('')
    st.info('Health Related')
  with cold2:
    ann_comdis_public = st.number_input('Total Annual Expenditure on Noncommunicable Diseases (USD)',value=500)
    ann_prolos_public = st.number_input('Total Annual National Health Related Productivity Loss (USD)',value=500)
  with cold3:
    ann_resdis_public = st.number_input('Total Annual Expenditure on Respiratory Diseases (USD)',value=500)

  cole1,cole2,cole3 = st.beta_columns(3)
  with cole1:
    st.text('')
    st.info('Tourism Related')
  with cole2:
    ann_tour_public = st.number_input('Annual Tourism Revenues (Past 3 Years) (USD)', value=500)
    cur_tousiz_public = st.number_input('Current Tourism Sector Size (USD)',value=500)
  with cole3:
    ann_inttou_public = st.number_input('Annual no of Internationall Tourist Arrivals (Past 3 Years)',value=500)
    tour_gdp_public = st.number_input('Tourism Sector as % of GDP (USD)',value=500)

  colf1,colf2,colf3 = st.beta_columns(3)
  with colf1:
    st.text('')
    st.info('Jobs Related')
  with colf2:
    tot_jobs_public = st.number_input('Total no of Jobs In Forestry and Ecotourism Sectors',value=0)
    labor_prod_public = st.number_input('National Labor Productivity (GDP per hour worked)',value=0)
  with colf3:
    avg_joblos_public = st.number_input('Average no of Job Losses Due to Natural Disasters',value=0)
    tot_incjob_public = st.number_input('Total Earned Income from Jobs in Forestry, Ecotourism (USD)',value=500)

  colh1,colh2,colh3 = st.beta_columns(3)
  with colh1:
    st.text('')
    st.info('Total Annual Number of Deaths')
  with colh2:
    noofdeath_disease = st.number_input('Attributable to NCDs, Respiratory Diseases, Pollution, Mental Health',value=0)
  with colh3:
    noofdeath_hygiene = st.number_input('Attributable to Unsafe Water, Sanitation, Hygeine (per capita)', value=0)

  colg1,colg2,colg3 = st.beta_columns(3)
  with colg1:
    st.text('')
    st.info('Others')
  with colg2:
    ann_foss_public = st.number_input('Total Annual Fossil Fuel Subsidies (USD)',value=500)
    avg_life_public = st.number_input('Average Life Expectancy',value=0)
  with colg3:
    ann_acaavg_public = st.number_input('Annual Academic Average',value=0)


# executing the main function
if __name__ == '__main__':
  main()